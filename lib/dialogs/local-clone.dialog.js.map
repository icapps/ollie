{"version":3,"sources":["../../src/dialogs/local-clone.dialog.js"],"names":["LocalCloneDialog","repository","name","questions","message","type","default","process","cwd","prompt","answers","clonePath","join","localPath","pathExistsSync","Error","clone"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEqBA,gB;AACnB,4BAAYC,UAAZ,EAAwBC,IAAxB,EAA8B;AAAA;;AAC5B,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKD,UAAL,GAAkBA,UAAlB;;AAEA,SAAKE,SAAL,GAAiB;AACfD,YAAM,WADS;AAEfE,eAAS,iDAFM;AAGfC,YAAM,QAHS;AAIfC,eAASC,QAAQC,GAAR;AAJM,KAAjB;AAMD;;;;;;;;;;;;uBAGuB,mBAASC,MAAT,CAAgB,KAAKN,SAArB,C;;;AAAhBO,uB;AACAC,yB,GAAY,eAAKC,IAAL,CAAUF,QAAQG,SAAlB,EAA6B,KAAKX,IAAlC,C;;uBAER,kBAAGY,cAAH,CAAkBH,SAAlB,C;;;;;;;;sBACF,IAAII,KAAJ,CAAU,uDAAV,EAAmEJ,SAAnE,C;;;;uBAIF,cAAIK,KAAJ,CAAU,KAAKf,UAAf,EAA2BU,SAA3B,C;;;;uBAGA,+CAAe,eAAKC,IAAL,CAAUD,SAAV,EAAqB,MAArB,CAAf,C;;;iDAEC;AACLE,6BAAWF;AADN,iB;;;;;;;;;;;;;;;;;;;;;kBA3BUX,gB","file":"local-clone.dialog.js","sourcesContent":["import path from 'path';\nimport _ from 'lodash';\nimport inquirer from 'inquirer';\nimport Git from './../utils/git.util';\nimport fs from 'fs-extra';\nimport exec from './../utils/child-process-promise';\n\nexport default class LocalCloneDialog {\n  constructor(repository, name) {\n    this.name = name;\n    this.repository = repository;\n\n    this.questions = {\n      name: 'localPath',\n      message: 'Where would you like to store your new project?',\n      type: 'string',\n      default: process.cwd(),\n    };\n  }\n\n  async start() {\n    const answers = await inquirer.prompt(this.questions)\n    const clonePath = path.join(answers.localPath, this.name);\n\n    if (await fs.pathExistsSync(clonePath)) {\n      throw new Error('Couldn\\'t clone repository, this path already exists:', clonePath);\n    }\n\n    // clone repository into clone path\n    await Git.clone(this.repository, clonePath)\n\n    // remove .git directory\n    await exec(`rm -rf ${path.join(clonePath, '.git')}`)\n\n    return {\n      localPath: clonePath,\n    };\n  }\n}\n\n"]}