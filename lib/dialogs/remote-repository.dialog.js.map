{"version":3,"sources":["../../src/dialogs/remote-repository.dialog.js"],"names":["RemoteRepositoryDialog","projectName","questions","name","message","type","choices","map","filter","find","answer","answers","gitService","prompt","apiServiceOptions","gitServiceUsername","gitServicePassword","apiService","createRepository","remoteRepositoryUrl","console","log"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;IAEqBA,sB;AACnB,kCAAYC,WAAZ,EAAyB;AAAA;;AACvB,SAAKA,WAAL,GAAmBA,WAAnB;;AAEA,SAAKC,SAAL,GAAiB,CACf;AACEC,YAAM,YADR;AAEEC,eAAS,mCAFX;AAGEC,YAAM,MAHR;AAIEC,eAAS,iBAAEC,GAAF,uBAAiB,MAAjB,CAJX;AAKEC,cAAQ;AAAA,eAAU,iBAAEC,IAAF,uBAAkB,EAAEN,MAAMO,MAAR,EAAlB,CAAV;AAAA;AALV,KADe,EAQf;AACEP,YAAM,oBADR;AAEEC,eAAS;AAAA,qDAA8CO,QAAQC,UAAR,CAAmBT,IAAjE,oDAAoHQ,QAAQC,UAAR,CAAmBT,IAAvI;AAAA,OAFX;AAGEE,YAAM;AAHR,KARe,EAaf;AACEF,YAAM,oBADR;AAEEC,eAAS,6DAFX;AAGEC,YAAM;AAHR,KAbe,CAAjB;AAmBD;;;;;;;;;;;;uBAGuB,mBAASQ,MAAT,CAAgB,KAAKX,SAArB,C;;;AAAhBS,uB;AAEAG,iC,GAAoB;AACxBF,8BAAYD,QAAQC,UADI;AAExBX,+BAAa,KAAKA,WAFM;AAGxBc,sCAAoBJ,QAAQI,kBAHJ;AAIxBC,sCAAoBL,QAAQK;AAJJ,iB;;;AAO1B,qBAAKC,UAAL,GAAkB,qBAAeH,kBAAkBF,UAAlB,CAA6BT,IAA5C,EAAkDW,iBAAlD,CAAlB;;;uBAEoC,KAAKG,UAAL,CAAgBC,gBAAhB,E;;;AAA5BC,mC;iDACCA,mB;;;;;;AAEPC,wBAAQC,GAAR,CAAY,4BAAZ;;;;;;;;;;;;;;;;;;;;;kBAxCerB,sB","file":"remote-repository.dialog.js","sourcesContent":["import path from 'path';\nimport _ from 'lodash';\nimport inquirer from 'inquirer';\nimport Git from './../utils/git.util';\nimport { providers  } from './../constants';\nimport serviceFactory from './../factories/api-service.factory';\n\nexport default class RemoteRepositoryDialog {\n  constructor(projectName) {\n    this.projectName = projectName;\n\n    this.questions = [\n      {\n        name: 'gitService',\n        message: 'Which service do you wish to use?',\n        type: 'list',\n        choices: _.map(providers, 'name'),\n        filter: answer => _.find(providers, { name: answer }),\n      },\n      {\n        name: 'gitServiceUsername',\n        message: answers => `We noticed you didn't enter any ${answers.gitService.name} credentials, would you mind giving me your ${answers.gitService.name} username?`,\n        type: 'string',\n      },\n      {\n        name: 'gitServicePassword',\n        message: 'And now you password? Don\\'t worry, I won\\'t tell anyone...',\n        type: 'password',\n      },\n    ]\n  }\n\n  async start() {\n    const answers = await inquirer.prompt(this.questions)\n\n    const apiServiceOptions = {\n      gitService: answers.gitService,\n      projectName: this.projectName,\n      gitServiceUsername: answers.gitServiceUsername,\n      gitServicePassword: answers.gitServicePassword\n    };\n\n    this.apiService = serviceFactory[apiServiceOptions.gitService.name](apiServiceOptions);\n    try {\n      const remoteRepositoryUrl = await this.apiService.createRepository();\n      return remoteRepositoryUrl;\n    } catch (e) {\n      console.log('create remote repo error: ', e);\n    }\n  }\n}\n\n"]}