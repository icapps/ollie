{"version":3,"sources":["../src/Ollie.js"],"names":["Ollie","options","projectTypes","surveys","development","welcome","printWelcome","prompt","openingQuestions","answeringAnswers","startSurvey","surveyAnswers","localPath","printFinish","console","log","textSync","blue","name","message","type","choices","map","answers","project","find","projectType","SurveyClass","survey","start"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEqBA,K;AACnB,mBAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKC,YAAL,GAAoBD,QAAQC,YAA5B;AACA,SAAKC,OAAL,GAAeF,QAAQE,OAAvB;AACA,SAAKC,WAAL,GAAmBH,QAAQG,WAA3B;;AAEA,SAAKC,OAAL,GAAe,YAAM,CACpB,CADD;AAED;;;;;;;;;;;AAGC,qBAAKC,YAAL;;;uBAE+B,mBAASC,MAAT,CAAgB,KAAKC,gBAAL,EAAhB,C;;;AAAzBC,gC;;uBACsB,KAAKC,WAAL,CAAiBD,gBAAjB,C;;;AAAtBE,6B;AACEC,yB,GAAcD,a,CAAdC,S;;;AAER,qBAAKC,WAAL,CAAiBD,SAAjB;;;;;;;;;;;;;;;;;;mCAGa;AACb;AACAE,cAAQC,GAAR,CAAY,iBAAOC,QAAP,CAAgB,OAAhB,EAAyB,UAAzB,CAAZ;AACAF,cAAQC,GAAR,CAAY,gBAAME,IAAN,CAAW,WAAX,CAAZ;AACAH,cAAQC,GAAR,CAAY,gBAAME,IAAN,CAAW,0CAAX,CAAZ;AACD;;;gCAEWL,S,EAAW;AACrBE,cAAQC,GAAR,CAAY,gBAAME,IAAN,gDAAuDL,SAAvD,qBAAZ;AACD;;;uCAEkB;AACjB,aAAO,CACL;AACEM,cAAM,aADR;AAEEC,iBAAS,kDAFX;AAGEC,cAAM,MAHR;AAIEC,iBAAS,iBAAEC,GAAF,CAAM,KAAKpB,YAAX,EAAyB,MAAzB;AAJX,OADK,CAAP;AAQD;;;;4FAEiBqB,O;;;;;;AACVC,uB,GAAU,iBAAEC,IAAF,CAAO,KAAKvB,YAAZ,EAA0B,EAAEgB,MAAMK,QAAQG,WAAhB,EAA1B,C;AACVC,2B,GAAc,KAAKxB,OAAL,CAAaqB,QAAQI,MAArB,C;AACdA,sB,GAAS,IAAID,WAAJ,E;kDACRC,OAAOC,KAAP,E;;;;;;;;;;;;;;;;;;;;;kBA9CU7B,K","file":"Ollie.js","sourcesContent":["import _ from 'lodash';\nimport inquirer from 'inquirer';\nimport clear from 'clear';\nimport figlet from 'figlet';\nimport chalk from 'chalk';\n\nexport default class Ollie {\n  constructor(options = {}) {\n    this.projectTypes = options.projectTypes;\n    this.surveys = options.surveys;\n    this.development = options.development;\n\n    this.welcome = () => {\n    };\n  }\n\n  async start() {\n    this.printWelcome();\n\n    const answeringAnswers = await inquirer.prompt(this.openingQuestions());\n    const surveyAnswers = await this.startSurvey(answeringAnswers);\n    const { localPath } = surveyAnswers;\n\n    this.printFinish(localPath);\n  }\n\n  printWelcome() {\n    clear();\n    console.log(figlet.textSync('Ollie', 'Standard'));\n    console.log(chalk.blue('Hi there!'));\n    console.log(chalk.blue('Let\\'s get you started with a project...'));\n  }\n\n  printFinish(localPath) {\n    console.log(chalk.blue(`Done, your new project is availlable at '${localPath}' üëè`));\n  }\n\n  openingQuestions() {\n    return [\n      {\n        name: 'projectType',\n        message: 'What kind of project would you like to generate?',\n        type: 'list',\n        choices: _.map(this.projectTypes, 'name'),\n      },\n    ];\n  }\n\n  async startSurvey(answers) {\n    const project = _.find(this.projectTypes, { name: answers.projectType });\n    const SurveyClass = this.surveys[project.survey];\n    const survey = new SurveyClass();\n    return survey.start();\n  }\n}\n"]}