{"version":3,"sources":["../../src/surveys/web.survey.js"],"names":["WebSurvey","answers","boilerplateDialog","start","boilerplateAnswers","projectName","boilerplateRepository","boilerplate","repository","cloneDialog","cloneAnswers","localPath","git","setup","replaceVariablesDialog","Promise","resolve"],"mappings":";;;;;;;;;AAEA;;;AAMA;;;AARA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;;;;;IAEqBA,S;AACnB,uBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACD;;;;;;;;;;;AAGOC,iC,GAAoB,0BAAsB,KAAtB,C;;uBACOA,kBAAkBC,KAAlB,E;;;AAA3BC,kC;;AACN,qBAAKH,OAAL,CAAaI,WAAb,GAA2BD,mBAAmBC,WAA9C;AACA,qBAAKJ,OAAL,CAAaK,qBAAb,GAAqCF,mBAAmBG,WAAnB,CAA+BC,UAApE;;AAEMC,2B,GAAc,yBAAqB,KAAKR,OAAL,CAAaK,qBAAlC,EAAyD,KAAKL,OAAL,CAAaI,WAAtE,C;;uBACOI,YAAYN,KAAZ,E;;;AAArBO,4B;;AACN,qBAAKT,OAAL,CAAaU,SAAb,GAAyBD,aAAaC,SAAtC;;AAEA;AACMC,mB,GAAM,sBAAQ,KAAKX,OAAb,EAAsB,KAAKA,OAAL,CAAaU,SAAnC,C;;uBACNC,IAAIC,KAAJ,E;;;;AAEN;AACA;AACA;;AAEMC,sC,GAAyB,+BAA2B,KAAKb,OAAL,CAAaI,WAAxC,EAAqD,KAAKJ,OAAL,CAAaU,SAAlE,C;;uBACzBG,uBAAuBX,KAAvB,E;;;iDAECY,QAAQC,OAAR,CAAgB,KAAKf,OAArB,C;;;;;;;;;;;;;;;;;;;;;kBA1BUD,S","file":"web.survey.js","sourcesContent":["import path from 'path';\n\n// dialogs\nimport BoilerplateDialog from '../dialogs/boilerplate.dialog';\nimport LocalCloneDialog from '../dialogs/local-clone.dialog';\nimport RemoteRepositoryDialog from '../dialogs/remote-repository.dialog';\nimport ReplaceVariablesDialog from '../dialogs/replace-variables.dialog';\n\n// utils\nimport Git from '../utils/git.util.js';\n\nexport default class WebSurvey {\n  constructor() {\n    this.answers = {};\n  }\n\n  async start() {\n    const boilerplateDialog = new BoilerplateDialog('web');\n    const boilerplateAnswers = await boilerplateDialog.start();\n    this.answers.projectName = boilerplateAnswers.projectName;\n    this.answers.boilerplateRepository = boilerplateAnswers.boilerplate.repository;\n\n    const cloneDialog = new LocalCloneDialog(this.answers.boilerplateRepository, this.answers.projectName);\n    const cloneAnswers = await cloneDialog.start();\n    this.answers.localPath = cloneAnswers.localPath;\n\n    // git\n    const git = new Git(this.answers, this.answers.localPath);\n    await git.setup();\n\n    // // remote git repository (Bitbucket / Github)\n    // const remoteRepoDialog = new RemoteRepositoryDialog(this.answers.projectName);\n    // const remoteRepoAnswers = await remoteRepoDialog.start();\n\n    const replaceVariablesDialog = new ReplaceVariablesDialog(this.answers.projectName, this.answers.localPath);\n    await replaceVariablesDialog.start();\n\n    return Promise.resolve(this.answers);\n  }\n}\n\n"]}