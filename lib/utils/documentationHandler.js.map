{"version":3,"sources":["../../src/utils/documentationHandler.js"],"names":["DocumentationHandler","answers","localRepository","type","remoteRepository","setWebProject","setIOSProject","setAndroidProject","readPackageJson","then","writePackageJson","replaceJsonValues","packageJson","getJsonValues","name","projectName","author","description","repository","getCorrectRepositoryInfo","url","readJson","path","values","writeJson"],"mappings":";;;;;;;;;AAAA;;;;;;;;IAEqBA,oB;AACnB,gCAAYC,OAAZ,EAAqBC,eAArB,EAAsCC,IAAtC,EAA4C;AAAA;;AAC1C,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKE,gBAAL,GAAwB,IAAxB;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACD;;;;uCAEkB;AACjB,UAAI,KAAKA,IAAL,KAAc,KAAlB,EAAyB,OAAO,KAAKE,aAAL,EAAP,CAAzB,KACK,IAAI,KAAKF,IAAL,KAAc,KAAlB,EAAyB,OAAO,KAAKG,aAAL,EAAP;AAC9B,aAAO,KAAKC,iBAAL,EAAP;AACD;;AAED;;;;;;oCAIgB;AAAA;;AACd,aAAO,KAAKC,eAAL,GACNC,IADM,CACD;AAAA,eAAe,MAAKC,gBAAL,CAAsB,sBAAYC,iBAAZ,CAA8BC,WAA9B,EAA2C,MAAKC,aAAL,EAA3C,CAAtB,CAAf;AAAA,OADC,CAAP;AAED;;;oCAEe;AACd,aAAO;AACLC,cAAM,KAAKb,OAAL,CAAac,WADd;AAELC,gBAAQ,QAFH;AAGLC,qBAAa,KAAKhB,OAAL,CAAagB,WAHrB;AAILC,oBAAY,KAAKC,wBAAL;AAJP,OAAP;AAMD;;;+CAE0B;AACzB,UAAI,KAAKf,gBAAT,EAA2B;AACzB,eAAO;AACLD,gBAAM,KADD;AAELiB,eAAK,KAAKhB;AAFL,SAAP;AAID;AACD,aAAO,EAAP;AACD;;;sCAEiB;AAChB,aAAO,sBAAYiB,QAAZ,CAAwB,KAAKnB,eAAL,CAAqBoB,IAA7C,mBAAP;AACD;;;qCAEgBC,M,EAAQ;AACvB,aAAO,sBAAYC,SAAZ,CAAyB,KAAKtB,eAAL,CAAqBoB,IAA9C,oBAAmEC,MAAnE,CAAP;AACD;;AAGD;;;;;;oCAIgB;AACd,aAAO,IAAP;AACD;;AAGD;;;;;;wCAIoB;AAClB,aAAO,IAAP;AACD;;AAED;;;;;;wCAGoBnB,gB,EAAkB;AACpC,WAAKA,gBAAL,GAAwBA,gBAAxB;AACD;;;;;;kBAzEkBJ,oB","file":"documentationHandler.js","sourcesContent":["import JsonHandler from './jsonHandler';\n\nexport default class DocumentationHandler {\n  constructor(answers, localRepository, type) {\n    this.answers = answers;\n    this.localRepository = localRepository;\n    this.remoteRepository = null;\n    this.type = type;\n  }\n\n  setDocumentation() {\n    if (this.type === 'WEB') return this.setWebProject();\n    else if (this.type === 'IOS') return this.setIOSProject();\n    return this.setAndroidProject();\n  }\n\n  /**\n   * WEB\n   */\n\n  setWebProject() {\n    return this.readPackageJson()\n    .then(packageJson => this.writePackageJson(JsonHandler.replaceJsonValues(packageJson, this.getJsonValues())));\n  }\n\n  getJsonValues() {\n    return {\n      name: this.answers.projectName,\n      author: 'icapps',\n      description: this.answers.description,\n      repository: this.getCorrectRepositoryInfo(),\n    };\n  }\n\n  getCorrectRepositoryInfo() {\n    if (this.remoteRepository) {\n      return {\n        type: 'git',\n        url: this.remoteRepository,\n      };\n    }\n    return {};\n  }\n\n  readPackageJson() {\n    return JsonHandler.readJson(`${this.localRepository.path}/package.json`);\n  }\n\n  writePackageJson(values) {\n    return JsonHandler.writeJson(`${this.localRepository.path}/package.json`, values);\n  }\n\n\n  /**\n   * IOS\n   */\n\n  setIOSProject() {\n    return true;\n  }\n\n\n  /**\n   * ANDROID\n   */\n\n  setAndroidProject() {\n    return true;\n  }\n\n  /**\n   * SETTERS\n   */\n  setRemoteRepository(remoteRepository) {\n    this.remoteRepository = remoteRepository;\n  }\n\n}\n"]}