{"version":3,"sources":["../../src/utils/local_repository.js"],"names":["LocalRepository","path","name","process","cwd","Promise","resolve","reject","existsSync","mkdir","error","clone","repository"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;;;IAEqBA,e;AACnB,2BAAYC,IAAZ,EAAkBC,IAAlB,EAAwB;AAAA;;AACtB,SAAKD,IAAL,GAAaA,SAAS,EAAT,IAAe,CAACA,IAAjB,GAA4BE,QAAQC,GAAR,EAA5B,SAA6CF,IAA7C,GAAyDD,IAAzD,SAAiEC,IAA7E;AACD;;AAED;;;;;4CACwB;AAAA;;AACtB,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC;AACA,YAAI,CAAC,kBAAGC,UAAH,CAAc,MAAKP,IAAnB,CAAL,EAA+B;AAC7B,4BAAGQ,KAAH,CAAS,MAAKR,IAAd,EAAoB,UAACS,KAAD,EAAW;AAC7B,gBAAIA,KAAJ,EAAWH,OAAOG,KAAP;AACXJ;AACD,WAHD;AAID;AACDA;AACD,OATM,CAAP;;AAWA;AACA,oBAAWK,KAAX,CAAiBC,UAAjB,EAA6B,KAAKX,IAAlC;AACD;;;;;;kBApBkBD,e","file":"local_repository.js","sourcesContent":["import fs from 'fs-extra';\nimport GitHandler from '../utils/git.util';\n\nexport default class LocalRepository {\n  constructor(path, name) {\n    this.path = (path === '' || !path) ? `${process.cwd()}/${name}` : `${path}/${name}`;\n  }\n\n  // TODO: Check fs-extra for better syntax\n  createLocalRepository() {\n    return new Promise((resolve, reject) => {\n      // Only create new directory if doesn't exist already\n      if (!fs.existsSync(this.path)) {\n        fs.mkdir(this.path, (error) => {\n          if (error) reject(error);\n          resolve();\n        });\n      }\n      resolve();\n    });\n\n    // const gitHandler = new GitHandler(answers, localRepository);\n    GitHandler.clone(repository, this.path);\n  }\n}\n"]}